{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from './routes';\nVue.use(VueRouter);\nvar originalPush = VueRouter.prototype.push;\n\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(function (err) {\n    return err;\n  });\n};\n\nvar router = new VueRouter({\n  mode: 'history',\n  scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  },\n  routes: routes\n});\nrouter.onError(function (error) {\n  var pattern = /Loading chunk (\\d)+ failed/g;\n  var isChunkLoadFailed = error.message.match(pattern);\n  var targetPath = router.history.pending.fullPath;\n\n  if (isChunkLoadFailed) {\n    router.replace(targetPath);\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module"}